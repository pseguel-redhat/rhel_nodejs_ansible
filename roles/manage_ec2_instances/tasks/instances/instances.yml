---
- name: Provision instance web1
  ec2_instance:
    key_name: "{{ ec2_name_prefix }}-key"
    network:
      iassign_public_ip: true
    security_group: "{{ ec2_security_group }}"
    region: "{{ ec2_region }}" 
    instance_type: t2.micro
    # centos stream 8
    image_id: ami-0ee70e88eed976a1b
    tags:
      Info: "Provisionado por Ansible"
      Workshop: "{{ ec2_name_prefix }}"
      Name: "{{ ec2_name_prefix }}-web1"
      role: webserver
    vpc_subnet_id: "{{ ec2_vpc_subnet_id }}"
    volumes:
    - device_name: /dev/sda1
      ebs:
        volume_type: gp2
        volume_size: 10 
        delete_on_termination: true
    wait: true
  register: node1_output

- name: Provision instance web2
  ec2_instance:
    key_name: "{{ ec2_name_prefix }}-key"
    network:
      assign_public_ip: true
    security_group: "{{ ec2_security_group }}"
    region: "{{ ec2_region }}" 
    instance_type: t2.micro
    # centos stream 8
    image_id: ami-0ee70e88eed976a1b
    tags:
      Info: "Provisionado por Ansible"
      Workshop: "{{ ec2_name_prefix }}"
      Name: "{{ ec2_name_prefix }}-web2"
      role: webserver
    vpc_subnet_id: "{{ ec2_vpc_subnet_id }}"
    volumes:
    - device_name: /dev/sda1
      ebs:
        volume_type: gp2
        volume_size: 10 
        delete_on_termination: true
    wait: true
  register: node2_output

- name: Provision instance lb
  ec2_instance:
    key_name: "{{ ec2_name_prefix }}-key"
    network:
      assign_public_ip: true
    security_group: "{{ ec2_security_group }}"
    region: "{{ ec2_region }}" 
    instance_type: t2.micro 
    # centos stream 8
    image_id: ami-0ee70e88eed976a1b
    tags:
      Info: "Provisionado por Ansible"
      Workshop: "{{ ec2_name_prefix }}"
      Name: "{{ ec2_name_prefix }}-lb"
      role: lb
    vpc_subnet_id: "{{ ec2_vpc_subnet_id }}"
    volumes:
    - device_name: /dev/sda1
      ebs:
        volume_type: gp2
        volume_size: 10 
        delete_on_termination: true
    wait: true
  register: lb_node_output

- name: Group DNS info from instances
  set_fact:
    dns_records:
    - dns_name: "lb-{{ ec2_name_prefix }}.{{ dns_zone }}"
      public_ip: "{{ lb_node_output.instances[0].public_ip_address }}"
    - dns_name: "web1-{{ ec2_name_prefix }}.{{ dns_zone }}"
      public_ip: "{{ node1_output.instances[0].public_ip_address }}"
    - dns_name: "web2-{{ ec2_name_prefix }}.{{ dns_zone }}"
      public_ip: "{{ node2_output.instances[0].public_ip_address }}"

- name: Create DNS Records
  route53:
    state: present
    zone: "{{ dns_zone }}"
    record: "{{ item.dns_name }}"
    type: A
    ttl: 60
    value: "{{ item.public_ip }}"
    overwrite: yes
    wait: yes
  loop: "{{ dns_records }}"

- name: Add new instances to host group
  add_host:
    hostname: "{{ item.public_ip }}"
    groupname: launched
    ansible_user: centos
  loop: "{{ dns_records }}"

- name: Wait for SSH to come up 
  delegate_to: "{{ item.public_ip }}"
  remote_user: centos
  wait_for_connection:
    delay: 60
    timeout: 320
  loop: "{{ dns_records }}"
